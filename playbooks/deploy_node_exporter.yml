---
- name: Deploy Prometheus node_exporter
  hosts: all
  become: yes
  vars:
    node_exporter_version: "1.7.0"
    node_exporter_user: "node_exporter"
    node_exporter_port: 9100

  tasks:
    - name: Create node_exporter user
      user:
        name: "{{ node_exporter_user }}"
        system: yes
        shell: /bin/false
        home: /var/lib/node_exporter
        create_home: no

    - name: Download node_exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: /tmp/node_exporter.tar.gz

    - name: Extract node_exporter
      unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /tmp
        remote_src: yes

    - name: Install node_exporter binary
      copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: /usr/local/bin/node_exporter
        owner: root
        group: root
        mode: '0755'
        remote_src: yes

    - name: Create systemd service file
      copy:
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          User={{ node_exporter_user }}
          Group={{ node_exporter_user }}
          Type=simple
          ExecStart=/usr/local/bin/node_exporter --web.listen-address=:{{ node_exporter_port }}

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/node_exporter.service
        owner: root
        group: root
        mode: '0644'

    - name: Set SELinux context for node_exporter binary
      sefcontext:
        target: /usr/local/bin/node_exporter
        setype: bin_t
        state: present
      when: ansible_selinux.status == "enabled"

    - name: Apply SELinux context
      command: restorecon -v /usr/local/bin/node_exporter
      when: ansible_selinux.status == "enabled"

    - name: Allow node_exporter to bind to port
      seboolean:
        name: nis_enabled
        state: yes
        persistent: yes
      when: ansible_selinux.status == "enabled"

    - name: Open firewall port for node_exporter
      firewalld:
        port: "{{ node_exporter_port }}/tcp"
        permanent: yes
        state: enabled
        immediate: yes
      ignore_errors: yes

    - name: Reload systemd and enable node_exporter
      systemd:
        name: node_exporter
        daemon_reload: yes
        enabled: yes
        state: started

    - name: Clean up temporary files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/node_exporter.tar.gz
        - "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64"